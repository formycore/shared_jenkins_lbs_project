- pipeline with scm
- under 
Dashboard
Manage Jenkins
System
Project Repository
- name the git repo from which we are using the shared library
- now the game of variables comes to place
- ALL THE GROOVY SHOULD BE UNDER THE VARS FOLDER ONLY
- now we are adding parameters here
- after parameteres create a new pipeline
******************************************************************************************************
- now for the sonarqube 
    under shared lib repo (staticCodeAnalysis)
    def call () {
        withSonarQubeEnv(credentialsId: 'sonar-api') {
            sh 'mvn clean package sonar:sonar'
            }
        }
    - the sonar-api value will be different for every other project,so we need to change the value
    of the sonar-api for each time 
    def call (credentialsId) {
        withSonarQubeEnv(credentialsId: credentialsId) {
            sh 'mvn clean package sonar:sonar'
            }
        }
    - UNDER THE JAVA APP
      def SonarQubecredentialsId = 'sonar-api' ( this is generated by the pipeline syntax)
    - staticCodeAnalysis(SonarQubecredentialsId)
******************************************************************************************************
- Now the static quality gate status check
